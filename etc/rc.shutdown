#!/bin/sh
#
# /etc/rc.shutdown
# part of FreeNAS (http://www.freenas.org)
# Copyright (C) 2005-2006 Olivier Cochard <cochard@gmail.com>.
# All rights reserved.

# Site-specific closing actions for daemons run by init on shutdown,
# or before going single-user from multi-user.
# Output and errors are directed to console by init, and the
# console is the controlling terminal.

stty status '^T'

# Set shell to ignore SIGINT (2), but not children;
# shell catches SIGQUIT (3) and returns to single user after fsck.
trap : 2
trap : 3	# shouldn't be needed

HOME=/
PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin
export HOME PATH

. /etc/rc.subr

load_rc_config 'XXX'

# reverse_list list
#	print the list in reverse order
#
reverse_list()
{
	_revlist=
	for _revfile in $*; do
		_revlist="$_revfile${script_name_sep}$_revlist"
	done
	echo $_revlist
}

# If requested, start a watchdog timer in the background which
# will terminate rc.shutdown if rc.shutdown doesn't complete
# within the specified time.
#
_rcshutdown_watchdog=
if [ -n "$rcshutdown_timeout" ]; then
	debug "Initiating watchdog timer."
	sleep $rcshutdown_timeout && (
		_msg="$rcshutdown_timeout second watchdog"
		_msg="$_msg timeout expired. Shutdown terminated."
		logger -t rc.shutdown "$_msg"
		echo "$_msg"
		date
		kill -KILL $$ >/dev/null 2>&1
	) &
	_rcshutdown_watchdog=$!
fi

# Determine the shutdown order of the /etc/rc.d scripts,
# and perform the operation
#
rcorder_opts="-k shutdown"
[ `/sbin/sysctl -n security.jail.jailed` -eq 1 ] && rcorder_opts="$rcorder_opts -s nojail"

case ${local_startup} in
[Nn][Oo] | '') ;;
*)     find_local_scripts_new ;;
esac

files=`rcorder ${rcorder_opts} /etc/rc.d/* ${local_rc} 2>/dev/null`

for _rc_elem in `reverse_list $files`; do
	debug "run_rc_script $_rc_elem faststop"
	run_rc_script $_rc_elem faststop
done

# Terminate the background watchdog timer (if it is running)
#
if [ -n "$_rcshutdown_watchdog" ]; then
	kill -TERM $_rcshutdown_watchdog >/dev/null 2>&1
fi

# Insert other shutdown procedures here
/etc/rc.shutdown.common

echo '.'
exit 0
