#!/bin/sh
# Copyright Â© 2007 Volker Theile (votdev@gmx.de)
# All rights reserved.

# PROVIDE: rsync_local
# REQUIRE: DAEMON
# BEFORE: cron

. /etc/rc.subr
. /etc/configxml.subr

# Get number of scripts to generate.
_scriptnum=`/usr/local/bin/xml sel -t -v "count(//rsync/rsynclocal)" ${configxml_file}`

if [ 0 -lt ${_scriptnum} ]; then
	echo "Generating local rsyncd cron scripts."

	_i=0
	while [ ${_scriptnum} -gt 0 ]
	do
		# Set scriptname.
		_rsyncscript=/var/run/rsync_local${_i}.sh

		# Generate the shell script that is used by cron.
		/usr/local/bin/xml sel -t -m "//rsync/rsynclocal[position()=${_scriptnum}]" \
			-o "#!/bin/sh" -n \
			-v "concat('/usr/bin/logger -p local4.notice &quot;Start of local RSYNC from ',source,' to ',destination,'&quot;')" -n \
			-o "if [ -r /var/run/rsync_local-running${_i} ]; then" -n \
			-o "/usr/bin/logger -p local4.notice &quot;Previous local synchronization still running... exiting&quot;" -n \
			-o "exit" -n \
			-o "fi" -n \
			-o "/usr/bin/touch /var/run/rsync_local-running${_i}" -n \
			-o "/usr/local/bin/rsync -a " -i "count(opt_delete) > 0" -o "--delete --delete-after " -b -v "concat('/mnt/',source,' /mnt/',destination)" -n \
			-o "/bin/rm -f /var/run/rsync_local-running${_i}" -n \
			-v "concat('/usr/bin/logger -p local4.notice &quot;End of local RSYNC synchronization from ',source,' to ',destination,'&quot;')" \
			${configxml_file} > ${_rsyncscript}

		# Add exectutive right to the script.
		/bin/chmod 0770 ${_rsyncscript}

		_i=$(( ${_i} + 1 ))
		_scriptnum=$(( ${_scriptnum} - 1 ))
	done
fi
