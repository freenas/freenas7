#!/bin/sh
# Copyright Â© 2007 Volker Theile (votdev@gmx.de)
# All rights reserved.

# PROVIDE: iscsi_initiator
# REQUIRE: NETWORKING
# XPATH: //iscsiinit/vdisk
# RCVAR: iscsi_initiator

. /etc/rc.subr
. /etc/configxml.subr

name="iscsi_initiator"
rcvar=`set_rcvar`

# Custom commands
start_precmd="start_precmd"
start_cmd="start_cmd"
stop_cmd="stop_cmd"

# Defaults
iscsi_initiator_enable="${iscsi_initiator_enable:=NO}"
command="/usr/local/sbin/iscontrol"

start_precmd()
{
	# Load kernel module.
	/sbin/kldload iscsi_initiator.ko > /dev/null
	# Disable debugging.
	/sbin/sysctl debug.iscsi=0 > /dev/null
}

start_cmd()
{
	local _disknum _initiatorname _targetname _targetaddress

	echo "Starting ${name}."

	# Iterate over all configured disks.
	_disknum=`/usr/local/bin/xml sel -t -v "count(//iscsiinit/vdisk)" ${configxml_file}`
	while [ $_disknum -gt 0 ]
	do
		_initiatorname=`/usr/local/bin/xml sel -t -m "//iscsiinit/vdisk[position()=$_disknum]" -v initiatorname ${configxml_file}`
		_targetname=`/usr/local/bin/xml sel -t -m "//iscsiinit/vdisk[position()=$_disknum]" -v targetname ${configxml_file}`
		_targetaddress=`/usr/local/bin/xml sel -t -m "//iscsiinit/vdisk[position()=$_disknum]" -v targetaddress ${configxml_file}`

		eval ${command} targetaddress=${_targetaddress} targetname=${_targetname} initiatorname=${_initiatorname} > /dev/null

		_disknum=$(( $_disknum - 1 ))
	done
}

stop_cmd()
{
	echo "Stopping ${name}."
	/usr/bin/killall iscontrol
}

load_rc_config ${name}
run_rc_command "$1"
