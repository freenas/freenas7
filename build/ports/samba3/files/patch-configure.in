--- ./configure.in.orig	2009-01-19 10:40:09.000000000 +0000
+++ ./configure.in	2009-01-20 15:50:59.000000000 +0000
@@ -1055,6 +1055,21 @@
    AC_DEFINE(HAVE_SIG_ATOMIC_T_TYPE,1,[Whether we have the atomic_t variable type])
 fi
 
+AC_CACHE_CHECK([for struct sigevent type],samba_cv_struct_sigevent, [
+    AC_TRY_COMPILE([
+#include <sys/types.h>
+#if STDC_HEADERS
+#include <stdlib.h>
+#include <stddef.h>
+#endif
+#include <signal.h>],[struct sigevent s;],
+	samba_cv_struct_sigevent=yes,samba_cv_struct_sigevent=no)])
+if test x"$samba_cv_struct_sigevent" = x"yes"; then
+   AC_DEFINE(HAVE_STRUCT_SIGEVENT,1,[Whether we have the struct sigevent])
+   AC_CHECK_MEMBERS([struct sigevent.sigev_value.sival_ptr,struct sigevent.sigev_value.sigval_ptr], , ,
+	[#include <signal.h>])
+fi
+
 AC_CACHE_CHECK([for struct timespec type],samba_cv_struct_timespec, [
     AC_TRY_COMPILE([
 #include <sys/types.h>
@@ -1258,6 +1273,7 @@
 
 # Find a method of generating a stack trace
 AC_CHECK_HEADERS(execinfo.h libexc.h libunwind.h)
+AC_SEARCH_LIBS(backtrace_symbols, [execinfo])
 AC_CHECK_FUNCS(backtrace_symbols)
 AC_CHECK_LIB(exc, trace_back_stack)
 
@@ -4098,10 +4114,10 @@
 
   ################################################################
   # first test for Active Directory support being enabled
-  #if test x"$with_ads_support" = x"no"; then
-  #		AC_MSG_ERROR(Active Directory support is required to enable DNS Update support)
-  #		with_dnsupdate_support=no
-  #fi	  	
+  if test x"$with_ads_support" = x"no"; then
+  		AC_MSG_ERROR(Active Directory support is required to enable DNS Update support)
+  		with_dnsupdate_support=no
+  fi	  	
   ##################################################################
   # then test for uuid.h (necessary to generate unique DNS keynames
   # (uuid.h is required for this test)
@@ -5226,7 +5242,7 @@
 #################################################
 # check for ACL support
 
-AC_MSG_CHECKING(whether to support ACLs)
+AC_MSG_NOTICE(checking whether to support ACLs...)
 AC_ARG_WITH(acl-support,
 [  --with-acl-support      Include ACL support (default=no)],
 [ case "$withval" in
@@ -5234,43 +5250,37 @@
 
 	case "$host_os" in
 	*sysv5*)
-		AC_MSG_RESULT(Using UnixWare ACLs)
+		AC_MSG_NOTICE(Using UnixWare ACLs)
 		AC_DEFINE(HAVE_UNIXWARE_ACLS,1,[Whether UnixWare ACLs are available])
 		default_static_modules="$default_static_modules vfs_solarisacl"
 		;;
 	*solaris*)
-		AC_MSG_RESULT(Using solaris ACLs)
-		AC_DEFINE(HAVE_SOLARIS_ACLS,1,[Whether solaris ACLs are available])
+		AC_MSG_NOTICE(Using Solaris ACLs)
+		AC_DEFINE(HAVE_SOLARIS_ACLS,1,[Whether Solaris ACLs are available])
 		ACL_LIBS="$ACL_LIBS -lsec"
 		default_static_modules="$default_static_modules vfs_solarisacl"
 		;;
 	*hpux*)
-		AC_MSG_RESULT(Using HPUX ACLs)
+		AC_MSG_NOTICE(Using HPUX ACLs)
 		AC_DEFINE(HAVE_HPUX_ACLS,1,[Whether HPUX ACLs are available])
 		default_static_modules="$default_static_modules vfs_hpuxacl"
 		;;
 	*irix*)
-		AC_MSG_RESULT(Using IRIX ACLs)
+		AC_MSG_NOTICE(Using IRIX ACLs)
 		AC_DEFINE(HAVE_IRIX_ACLS,1,[Whether IRIX ACLs are available])
 		default_static_modules="$default_static_modules vfs_irixacl"
 		;;
 	*aix*)
-		AC_MSG_RESULT(Using AIX ACLs)
+		AC_MSG_NOTICE(Using AIX ACLs)
 		AC_DEFINE(HAVE_AIX_ACLS,1,[Whether AIX ACLs are available])
 		default_static_modules="$default_static_modules vfs_aixacl"
 		;;
 	*osf*)
-		AC_MSG_RESULT(Using Tru64 ACLs)
+		AC_MSG_NOTICE(Using Tru64 ACLs)
 		AC_DEFINE(HAVE_TRU64_ACLS,1,[Whether Tru64 ACLs are available])
 		ACL_LIBS="$ACL_LIBS -lpacl"
 		default_static_modules="$default_static_modules vfs_tru64acl"
 		;;
-	*freebsd[[5-9]]*)
-		AC_MSG_RESULT(Using FreeBSD posix ACLs)
-		AC_DEFINE(HAVE_POSIX_ACLS,1,[Whether FreeBSD POSIX ACLs are available])
-		AC_DEFINE(HAVE_ACL_GET_PERM_NP,1,[Whether acl_get_perm_np() is available])
-		default_static_modules="$default_static_modules vfs_posixacl"
-		;;
 	*linux*)
 		AC_CHECK_LIB(attr,getxattr,[ACL_LIBS="$ACL_LIBS -lattr"])
        		AC_CHECK_LIB(acl,acl_get_file,[ACL_LIBS="$ACL_LIBS -lacl"])
@@ -5291,7 +5301,7 @@
 			LIBS=$acl_LIBS
 		])
 		if test x"$samba_cv_HAVE_POSIX_ACLS" = x"yes"; then
-			AC_MSG_RESULT(Using posix ACLs)
+			AC_MSG_NOTICE(Using posix ACLs)
 			AC_DEFINE(HAVE_POSIX_ACLS,1,[Whether POSIX ACLs are available])
 			AC_CACHE_CHECK([for acl_get_perm_np],samba_cv_HAVE_ACL_GET_PERM_NP,[
 				acl_LIBS=$LIBS
@@ -5312,12 +5322,18 @@
 				AC_DEFINE(HAVE_ACL_GET_PERM_NP,1,[Whether acl_get_perm_np() is available])
 			fi
 		fi
-            ;;
+		;;
          *)
-		AC_CHECK_LIB(acl,acl_get_file,[ACL_LIBS="$ACL_LIBS -lacl"])
-		AC_CACHE_CHECK([for ACL support],samba_cv_HAVE_POSIX_ACLS,[
+		AC_CHECK_LIB(acl,acl_get_file,[
+		    ACL_LIBS="$ACL_LIBS -lacl"
+		    samba_cv_acl_get_file=yes
+		],[
+		    AC_CHECK_FUNC(acl_get_file,[samba_cv_acl_get_file=yes])
+		])
+		if test x"$samba_cv_acl_get_file" = x"yes"; then
+		    AC_CACHE_CHECK([for POSIX ACL support],samba_cv_HAVE_POSIX_ACLS,[
 			acl_LIBS=$LIBS
-			LIBS="$LIBS -lacl"
+			LIBS="$LIBS $ACL_LIBS"
 			AC_TRY_LINK([
 				#include <sys/types.h>
 				#include <sys/acl.h>
@@ -5330,20 +5346,20 @@
 			[samba_cv_HAVE_POSIX_ACLS=yes],
 			[samba_cv_HAVE_POSIX_ACLS=no])
 			LIBS=$acl_LIBS
-		])
-		if test x"$samba_cv_HAVE_POSIX_ACLS" = x"yes"; then
-			AC_MSG_RESULT(Using posix ACLs)
+		    ])
+		    if test x"$samba_cv_HAVE_POSIX_ACLS" = x"yes"; then
+			AC_MSG_NOTICE(Using POSIX ACLs)
 			AC_DEFINE(HAVE_POSIX_ACLS,1,[Whether POSIX ACLs are available])
 			AC_CACHE_CHECK([for acl_get_perm_np],samba_cv_HAVE_ACL_GET_PERM_NP,[
 				acl_LIBS=$LIBS
-				LIBS="$LIBS -lacl"
+				LIBS="$LIBS $ACL_LIBS"
 				AC_TRY_LINK([
 					#include <sys/types.h>
 					#include <sys/acl.h>
 				],[
 					acl_permset_t permset_d;
 					acl_perm_t perm;
-					return acl_get_perm_np( permset_d, perm);
+					return acl_get_perm_np(permset_d, perm);
 				],
 				[samba_cv_HAVE_ACL_GET_PERM_NP=yes],
 				[samba_cv_HAVE_ACL_GET_PERM_NP=no])
@@ -5352,17 +5368,22 @@
 			if test x"$samba_cv_HAVE_ACL_GET_PERM_NP" = x"yes"; then
 				AC_DEFINE(HAVE_ACL_GET_PERM_NP,1,[Whether acl_get_perm_np() is available])
 			fi
+		    fi
+		fi
+		if test x"$samba_cv_HAVE_POSIX_ACLS" != x"yes"; then
+		    AC_MSG_NOTICE(No POSIX ACLs support is availble)
+		    AC_DEFINE(HAVE_NO_ACLS,1,[Whether no ACLs support is available])
 		fi
             ;;
         esac
         ;;
   *)
-    AC_MSG_RESULT(no)
+    AC_MSG_NOTICE(No ACLs support is availble)
     AC_DEFINE(HAVE_NO_ACLS,1,[Whether no ACLs support is available])
     ;;
   esac ],
+  AC_MSG_NOTICE(No ACLs support is built in)
   AC_DEFINE(HAVE_NO_ACLS,1,[Whether no ACLs support should be built in])
-  AC_MSG_RESULT(no)
 )
 
 if test x"$samba_cv_HAVE_POSIX_ACLS" = x"yes"; then
@@ -5836,6 +5857,7 @@
 		NSSSONAMEVERSIONSUFFIX=".1"
 		WINBIND_NSS_EXTRA_OBJS="nsswitch/winbind_nss_freebsd.o \
 		    nsswitch/winbind_nss_linux.o"
+		WINBIND_WINS_NSS_EXTRA_OBJS="nsswitch/wins_freebsd.o nsswitch/wins.o"
 		WINBIND_NSS="nsswitch/nss_winbind.$SHLIBEXT"
 		WINBIND_WINS_NSS="nsswitch/nss_wins.$SHLIBEXT"
 		;;
@@ -5893,6 +5915,8 @@
 AC_SUBST(WINBIND_NSS_LDSHFLAGS)
 AC_SUBST(WINBIND_NSS_EXTRA_OBJS)
 AC_SUBST(WINBIND_NSS_EXTRA_LIBS)
+AC_SUBST(WINBIND_WINS_NSS_EXTRA_OBJS)
+AC_SUBST(WINBIND_WINS_NSS_EXTRA_LIBS)
 AC_SUBST(NSSSONAMEVERSIONSUFFIX)
 AC_SUBST(PAM_WINBIND_EXTRA_LIBS)
 
@@ -6195,6 +6219,7 @@
 SMB_MODULE(vfs_irixacl, \$(VFS_IRIXACL_OBJ), "bin/irixacl.$SHLIBEXT", VFS)
 SMB_MODULE(vfs_hpuxacl, \$(VFS_HPUXACL_OBJ), "bin/hpuxacl.$SHLIBEXT", VFS)
 SMB_MODULE(vfs_tru64acl, \$(VFS_TRU64ACL_OBJ), "bin/tru64acl.$SHLIBEXT", VFS)
+SMB_MODULE(vfs_zfsacl, \$(VFS_ZFSACL_OBJ), "bin/zfsacl.$SHLIBEXT", VFS)
 SMB_MODULE(vfs_catia, \$(VFS_CATIA_OBJ), "bin/catia.$SHLIBEXT", VFS)
 SMB_MODULE(vfs_cacheprime, \$(VFS_CACHEPRIME_OBJ), "bin/cacheprime.$SHLIBEXT", VFS)
 SMB_MODULE(vfs_prealloc, \$(VFS_PREALLOC_OBJ), "bin/prealloc.$SHLIBEXT", VFS)
