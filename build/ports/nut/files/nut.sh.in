#!/bin/sh
# Copyright (c) 2008-2009 Volker Theile (votdev@gmx.de)
# All rights reserved.

# PROVIDE: nut
# REQUIRE: NETWORKING
# BEFORE: LOGIN
# KEYWORD: shutdown
# XQUERY: -i "count(//ups/enable) > 0" -o "0" -b
# RCVAR: nut

. /etc/rc.subr
. /etc/configxml.subr
. /etc/util.subr

name="nut"
rcvar=`set_rcvar`

load_rc_config "${name}"

# Custom commands
extra_commands="mkconf"
start_precmd="nut_prestart"
stop_postcmd="nut_poststop"
mkconf_cmd="nut_mkconf"

# Defaults
nut_enable=${nut_enable:-"NO"}
nut_prefix=${nut_prefix:-"/usr/local"}
nut_nut_conf=${nut_nut_conf:-"/var/etc/nut.conf"}
nut_ups_conf=${nut_ups_conf:-"/var/etc/ups.conf"}
nut_upsd_conf=${nut_upsd_conf:-"/var/etc/upsd.conf"}
nut_upsd_users=${nut_upsd_users:-"/var/etc/upsd.users"}
nut_upsd_port=${nut_upsd_port:-"3493"}
nut_upsd_maxage=${nut_upsd_maxage:-"15"}
nut_upsd_maxconn=${nut_upsd_maxconn:-"1024"}
nut_statedir=${nut_statedir:-"/var/db/${name}"}
nut_runas=${nut_runas:-"root"}
nut_flags=${nut_flags:-"-u ${nut_runas}"}
nut_upsmon_user=${nut_upsmon_user:-"root"}
required_dirs="/var/run ${nut_statedir}"
required_files="${nut_ups_conf} ${nut_upsd_conf} ${nut_upsd_users}"
command="${nut_prefix}/sbin/upsd"
pidfile="/var/run/upsd.pid"

nut_mkconf()
{
	local _if _ip

	############################
	# Create nut.conf
	/usr/local/bin/xml sel -t -m "//ups" \
		-i "count(remotemonitor) = 0" -o "MODE = standalone" -b \
		-i "count(remotemonitor) > 0" -o "MODE = netserver" -b \
		${configxml_file} | /usr/local/bin/xml unesc > ${nut_nut_conf}

	############################
	# Create ups.conf
	/usr/local/bin/xml sel -t -m "//ups" \
		-v "concat('[',upsname,']')" -n \
		-v "concat('&#009;driver = ',driver)" -n \
		-v "concat('&#009;port = ',port)" -n \
		-m "auxparam" \
			-v "concat('&#009;',.)" -n \
		-b \
		${configxml_file} | /usr/local/bin/xml unesc > ${nut_ups_conf}

	############################
	# Create upsd.conf
	cat <<EOF > ${nut_upsd_conf}
MAXAGE ${nut_upsd_maxage}
MAXCONN ${nut_upsd_maxconn}
LISTEN 127.0.0.1 ${nut_upsd_port}
LISTEN ::1 ${nut_upsd_port}
EOF

	# Add listening interface for remote monitoring
	if configxml_isset //ups/remotemonitor; then
		_if=`configxml_get "//interfaces/lan/if"`
		_ip=`get_ipaddr inet ${_if}`
		echo "LISTEN ${_ip} ${nut_upsd_port}" >> ${nut_upsd_conf}

		#if configxml_isset //interfaces/lan/ipv6_enable; then
		#	_ip=`get_ipaddr inet6 ${_if}`
		#	echo "LISTEN ${_ip} ${nut_upsd_port}" >> ${nut_upsd_conf}
		#fi
	fi

	############################
	# Create upsd.users
	/usr/local/bin/xml sel -t \
		-o "[${nut_upsmon_user}]" -n \
		-v "concat('        password = ',//system/password)" -n \
		-o "        actions = set" -n \
		-o "        upsmon master" \
		${configxml_file} | /usr/local/bin/xml unesc > ${nut_upsd_users}

	chmod 0600 ${nut_nut_conf}
	chmod 0600 ${nut_ups_conf}
	chmod 0600 ${nut_upsd_conf}
	chmod 0600 ${nut_upsd_users}
}

nut_prestart() {
	${nut_prefix}/libexec/nut/upsdrvctl -u ${nut_runas} start
}

nut_poststop() {
	${nut_prefix}/libexec/nut/upsdrvctl -u ${nut_runas} stop
}

# Prepare state dir
mkdir -m 0600 ${nut_statedir} 2>/dev/null

# Create required config file
nut_mkconf

run_rc_command "$1"
