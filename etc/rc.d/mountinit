#!/bin/sh
# Copyright (c) 2008 Volker Theile (votdev@gmx.de)
# All rights reserved.

# PROVIDE: mountinit
# BEFORE: CONFIG
# REQUIRE: SYSTEMINIT

. /etc/rc.subr
. /etc/configxml.subr

name="mountinit"

# Create /etc/fstab
mkfstab()
{
	local _rootdev

	_rootdev=`cat /var/etc/cfdevice`

	# Create /etc/fstab file
	cat <<EOF > /etc/fstab
# Device		Mountpoint	FStype	Options		Dump	Pass#
/dev/${_rootdev}		/		ufs	rw		1	1
EOF

	# Add physical devices
	/usr/local/bin/xml sel -t -m "//mounts/mount[type = 'disk']" \
			-v "concat(devicespecialfile,' /mnt/',sharename)" \
			-i "fstype[. = 'ntfs']" -o " ntfs-3g" -b \
			-i "fstype[. != 'ntfs']" -v "concat(' ',fstype)" -b \
			-i "count(readonly) = 0" -o " rw" -b \
			-i "count(readonly) > 0" -o " ro" -b \
			-i "fstype[. = 'ufs']" -o ",userquota,groupquota" -b \
			-o " 0" \
			-i "count(fsck) = 0" -o " 0" -b \
			-i "count(fsck) > 0" -o " 2" -b \
			-n \
		-b \
		${configxml_file} | /usr/local/bin/xml unesc >> /etc/fstab

	# Add memory devices
	for _md in ${_mdconfig2_list}; do
		eval _fstype=\$_mdconfig_${_md}_fstype
		eval _mp=\$_mdconfig_${_md}_mp
		echo "/dev/${_md} ${_mp} ${_fstype} ro,noauto 0 0" >> /etc/fstab
	done
}

# Create mdconfig2 configuration
mkmdconfig2()
{
	local _unit _index _filename _sharename

	# Make sure symlink is set, otherwise it is not possible for /etc/mdconfig2
	# to mount ISO files.
	ln -s /usr/bin/true /sbin/fsck_cd9660 >/dev/null 2>&1

	# Cleanup. Remove all previous mdconfig_xxx entries.
	set | grep mdconfig | while read _value; do
		_value=${_value%=*}
		eval /usr/local/sbin/rconf attribute remove "${_value}"
	done

	# Get next free memory device id. Use this as start id.
	_unit=`get_mdid`

	# Configure memory disks used to mount ISO files
	_index=`configxml_get_count "//mounts/mount[type = 'iso']"`
	while [ ${_index} -gt 0 ]
	do
		_filename=`configxml_get "//mounts/mount[type = 'iso'][${_index}]/filename"`
		_sharename=`configxml_get "//mounts/mount[type = 'iso'][${_index}]/sharename"`

		# Update list of memory devices
		_mdconfig2_list="${_mdconfig2_list:+ }md${_unit}"

		# Set additional informations needed to update /etc/fstab later
		eval _mdconfig_md${_unit}_fstype="cd9660"
		eval _mdconfig_md${_unit}_mp="/mnt/${_sharename}"

		# Set memory device in rc.conf
		eval /usr/local/sbin/rconf attribute set "mdconfig_md${_unit}" "-t vnode -f ${_filename}"

		_unit=$((${_unit} + 1))
		_index=$((${_index} - 1))
	done

	eval /usr/local/sbin/rconf attribute set "mdconfig2_list" "${_mdconfig2_list}"
}

# Create mount points
mkmp()
{
	# Prepare mount points. Make sure paths exists.
	/usr/local/bin/xml sel -t -m "//mounts/mount" \
		-v sharename -n \
		${configxml_file} | /usr/local/bin/xml unesc |
		while read _sharename; do
			[ -z ${_sharename} ] && continue
			mkdir -p /mnt/${_sharename} >/dev/null 2>&1
		done
}

get_mdid()
{
	local _mdid

	_mdid=`mdconfig -l | awk '{print $NF}'`
	_mdid=${_mdid#md}
	if [ -z ${_mdid} ]; then
		_mdid=0
	else
		_mdid=$((${_mdid} + 1))
	fi

	eval echo ${_mdid}
}

load_rc_config "XXX"

_mdconfig2_list=""

mkmdconfig2
mkfstab
mkmp

return 0
