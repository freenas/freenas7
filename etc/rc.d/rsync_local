#!/bin/sh
# Copyright (c) 2007-2008 Volker Theile (votdev@gmx.de)
# All rights reserved.

# PROVIDE: rsync_local
# REQUIRE: DAEMON
# BEFORE: cron

. /etc/rc.subr
. /etc/configxml.subr

name="rsync_local"

load_rc_config $name

# Defaults
rsync_local_logfile=${rsync_local_logfile:-"/var/log/${name}.log"}

# Get number of scripts to generate
_scriptnum=`configxml_get_count "//rsync/rsynclocal"`

if [ 0 -lt ${_scriptnum} ]; then
	echo "Generating local rsyncd cron scripts."

	_i=0
	while [ ${_scriptnum} -gt 0 ]
	do
		# Set scriptname
		_rsyncscript=/var/run/rsync_local${_i}.sh

		# Generate the shell script that is used by cron
		/usr/local/bin/xml sel -t -m "//rsync/rsynclocal[position()=${_scriptnum}]" \
			-o "#!/bin/sh" -n \
			-v "concat('/usr/bin/logger -p local4.notice &quot;Start of local RSYNC from ',source,' to ',destination,'&quot;')" -n \
			-o "if [ -r /var/run/rsync_local-running${_i} ]; then" -n \
			-o "/usr/bin/logger -p local4.notice &quot;Previous local synchronization still running... exiting&quot;" -n \
			-o "exit" -n \
			-o "fi" -n \
			-o "/usr/bin/touch /var/run/rsync_local-running${_i}" -n \
			-o "/usr/local/bin/rsync -a --log-file=${rsync_local_logfile} " \
			-m "options" \
				-i "count(delete) > 0" -o "--delete --delete-after " -b \
				-i "count(quiet) > 0" -o "--quiet " -b \
				-i "count(perms) > 0" -o "--perms " -b \
				-i "count(xattrs) > 0" -o "--xattrs " -b \
				-i "string-length(extraoptions) > 0" -v "concat(extraoptions,' ')" -b \
			-b \
			-v "concat('&quot;',source,'&quot; &quot;',destination,'&quot;')" -n \
			-o "/bin/rm -f /var/run/rsync_local-running${_i}" -n \
			-v "concat('/usr/bin/logger -p local4.notice &quot;End of local RSYNC synchronization from ',source,' to ',destination,'&quot;')" \
			${configxml_file} | /usr/local/bin/xml unesc > ${_rsyncscript}

		# Add execute right to the script
		/bin/chmod 0770 ${_rsyncscript}

		_i=$(( ${_i} + 1 ))
		_scriptnum=$(( ${_scriptnum} - 1 ))
	done
fi
