#!/bin/sh
# Copyright Â© 2007 Volker Theile (votdev@gmx.de)
# All rights reserved.

# PROVIDE: syslogd
# REQUIRE: mountcritlocal
# BEFORE: SERVERS

. /etc/rc.subr
. /etc/configxml.subr

name="syslogd"
rcvar=`set_rcvar`

# Defaults
syslogd_enable=${syslogd_enable:-"NO"}
syslogd_config=${syslogd_config:-"/var/etc/${name}.conf"}
pidfile="/var/run/syslog.pid"
command="/usr/sbin/${name}"
command_args="-ss -f ${syslogd_config}"

# Check if syslog'ing to remote syslog server is enabled.
if configxml_isset //syslog/enable; then
	command_args="-s -f ${syslogd_config}"
fi

# Custom commands
start_precmd="start_precmd"
extra_commands="reload"
reload_precmd="reload_precmd"

create_conf()
{
	echo "local3.*	%/var/log/sshd.log
local4.* %/var/log/rsyncd.log
local5.* %/var/log/smartd.log
ftp.* %/var/log/ftp.log
daemon.* %/var/log/daemon.log
*.notice;kern.debug;lpr.info;mail.crit;news.err;local0.none;local7.none %/var/log/system.log
security.* %/var/log/system.log
auth.info;authpriv.info %/var/log/system.log
*.emerg	*" > ${syslogd_config}

	# Add remote server configuration if syslog'ing to remote syslog server is enabled.
	/usr/local/bin/xml sel -t \
		-i "//syslog/enable" \
			-i "//syslog/ftp" \
				-o "ftp.* @" -v "//syslog/remoteserver" -n -b \
			-i "//syslog/sshd" \
				-o "local3.* @" -v "//syslog/remoteserver" -n -b \
			-i "//syslog/rsyncd" \
				-o "local4.* @" -v "//syslog/remoteserver" -n -b \
			-i "//syslog/smartd" \
				-o "local5.* @" -v "//syslog/remoteserver" -n -b \
			-i "//syslog/daemon" \
				-o "daemon.* @" -v "//syslog/remoteserver" -n -b \
			-i "//syslog/system" \
				-o "*.notice;kern.debug;lpr.info;mail.crit;news.err;local0.none;local7.none @" -v "//syslog/remoteserver" -n \
				-o "security.* @" -v "//syslog/remoteserver" -n \
				-o "auth.info;authpriv.info @" -v "//syslog/remoteserver" -n \
				-o "*.emerg	@" -v "//syslog/remoteserver" -n -b \
		-b \
		${configxml_file} >> ${syslogd_config}
}

reload_precmd()
{
	# Clear existing file.
	cat /dev/null > ${syslogd_config}

	# Create configuration file.
	create_conf
}

start_precmd()
{
	reload_precmd
}

load_rc_config ${name}
run_rc_command "$1"
