--- ata/ata-all.c.orig	2010-12-22 02:09:25.000000000 +0900
+++ ata/ata-all.c	2011-04-03 19:34:13.000000000 +0900
@@ -92,6 +92,7 @@
 uma_zone_t ata_request_zone;
 uma_zone_t ata_composite_zone;
 int ata_wc = 1;
+int ata_to = ATA_REQUEST_TIMEOUT;
 int ata_setmax = 0;
 int ata_dma_check_80pin = 1;
 
@@ -114,6 +115,9 @@
 TUNABLE_INT("hw.ata.wc", &ata_wc);
 SYSCTL_INT(_hw_ata, OID_AUTO, wc, CTLFLAG_RDTUN, &ata_wc, 0,
 	   "ATA disk write caching");
+TUNABLE_INT("hw.ata.to", &ata_to);
+SYSCTL_INT(_hw_ata, OID_AUTO, to, CTLFLAG_RW, &ata_to, 0,
+	   "ATA disk timeout vis-a-vis power-saving");
 TUNABLE_INT("hw.ata.setmax", &ata_setmax);
 SYSCTL_INT(_hw_ata, OID_AUTO, setmax, CTLFLAG_RDTUN, &ata_setmax, 0,
 	   "ATA disk set max native address");
--- ata/ata-all.h.orig	2010-12-22 02:09:25.000000000 +0900
+++ ata/ata-all.h	2011-04-03 19:30:46.000000000 +0900
@@ -603,6 +603,7 @@
 extern struct intr_config_hook *ata_delayed_attach;
 extern devclass_t ata_devclass;
 extern int ata_wc;
+extern int ata_to;
 extern int ata_setmax;
 extern int ata_dma_check_80pin;
 
--- ata/ata-disk.c.orig	2010-12-22 02:09:25.000000000 +0900
+++ ata/ata-disk.c	2011-04-03 19:35:24.000000000 +0900
@@ -235,7 +235,7 @@
     }
     request->dev = dev;
     request->flags = ATA_R_CONTROL;
-    request->timeout = ATA_REQUEST_TIMEOUT;
+    request->timeout = ata_to;
     request->retries = 1;
     request->callback = ad_power_callback;
     request->u.ata.command = ATA_STANDBY_IMMEDIATE;
@@ -267,10 +267,10 @@
     if (atadev->spindown_state) {
 	device_printf(dev, "request while spun down, starting.\n");
 	atadev->spindown_state = 0;
-	request->timeout = MAX(ATA_REQUEST_TIMEOUT, 31);
+	request->timeout = MAX(ata_to, 31);
     }
     else {
-	request->timeout = ATA_REQUEST_TIMEOUT;
+	request->timeout = ata_to;
     }
     request->retries = 2;
     request->data = bp->bio_data;
@@ -479,7 +479,7 @@
     request->u.ata.count = 0;
     request->u.ata.feature = 0;
     request->flags = ATA_R_CONTROL | ATA_R_QUIET;
-    request->timeout = ATA_REQUEST_TIMEOUT;
+    request->timeout = ata_to;
     request->retries = 0;
     ata_queue_request(request);
     if (request->status & ATA_S_ERROR)
@@ -498,7 +498,7 @@
     request->u.ata.count = 1;
     request->u.ata.feature = 0;
     request->flags = ATA_R_CONTROL;
-    request->timeout = ATA_REQUEST_TIMEOUT;
+    request->timeout = ata_to;
     request->retries = 0;
     ata_queue_request(request);
     if (request->status & ATA_S_ERROR)
