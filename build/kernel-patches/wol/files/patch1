diff -c -r /usr/src/sys/dev/nfe/if_nfe.c usr/src/sys/dev/nfe/if_nfe.c
*** /usr/src/sys/dev/nfe/if_nfe.c	Wed Feb 10 09:26:20 2010
--- usr/src/sys/dev/nfe/if_nfe.c	Sat Apr 10 13:26:37 2010
***************
*** 104,109 ****
--- 104,110 ----
  static void nfe_init(void *);
  static void nfe_init_locked(void *);
  static void nfe_stop(struct ifnet *);
+ static void nfe_setwol(struct nfe_softc *);
  static int  nfe_alloc_rx_ring(struct nfe_softc *, struct nfe_rx_ring *);
  static void nfe_alloc_jrx_ring(struct nfe_softc *, struct nfe_jrx_ring *);
  static int  nfe_init_rx_ring(struct nfe_softc *, struct nfe_rx_ring *);
***************
*** 596,601 ****
--- 597,607 ----
  	 */
  	ifp->if_data.ifi_hdrlen = sizeof(struct ether_vlan_header);
  
+         ifp->if_capabilities |= IFCAP_WOL_MAGIC;
+ /*
+ 	ifp->if_capenable = ifp->if_capabilities;
+ */
+ 
  #ifdef DEVICE_POLLING
  	ifp->if_capabilities |= IFCAP_POLLING;
  #endif
***************
*** 1757,1762 ****
--- 1763,1773 ----
  		}
  		if ((sc->nfe_flags & NFE_HW_VLAN) != 0)
  			VLAN_CAPABILITIES(ifp);
+ 
+                 if ((mask & IFCAP_WOL_MAGIC) != 0 &&
+                     (ifp->if_capabilities & IFCAP_WOL_MAGIC) != 0)
+                         ifp->if_capenable ^= IFCAP_WOL_MAGIC;
+ 
  		break;
  	default:
  		error = ether_ioctl(ifp, cmd, data);
***************
*** 2918,2923 ****
--- 2929,2935 ----
  	ifp = sc->nfe_ifp;
  	nfe_stop(ifp);
  	/* nfe_reset(sc); */
+ 	nfe_setwol(sc);
  	NFE_UNLOCK(sc);
  
  	return (0);
***************
*** 3204,3206 ****
--- 3216,3261 ----
  		stats->rx_broadcast += NFE_READ(sc, NFE_TX_BROADCAST);
  	}
  }
+ 
+ /*
+  * Disable Wake On Lan.
+  */
+ /*
+ static void
+ nfe_clrwol(device_t dev)
+ {
+         struct nfe_softc *sc;
+ 	struct ifnet *ifp;
+ 
+         sc = device_get_softc(dev);
+         NFE_WRITE(sc, NFE_WOL_CTL, 0);
+ }
+ */
+ 
+ /*
+  * Enable Wake On Lan.
+  */
+ static void
+ nfe_setwol(struct nfe_softc *sc)
+ {
+ 	struct ifnet *ifp;
+ 	ifp = sc->nfe_ifp;
+ 
+ /*
+         if ((ifp->if_capenable & IFCAP_WOL) == 0)
+                 return;
+ */
+         
+         if ((ifp->if_capenable & IFCAP_WOL) != 0) {
+                 NFE_WRITE(sc, NFE_WOL_CTL, NFE_WOL_MAGIC);
+                 NFE_WRITE(sc, NFE_RXFILTER, NFE_PFF_ALWAYS|NFE_PFF_U2M);
+                 NFE_WRITE(sc, NFE_RX_CTL, NFE_RX_START);
+                 pci_set_powerstate(sc->nfe_dev, PCI_POWERSTATE_D3);
+ #ifdef notyet
+         } else {
+                 nfe_miibus_writereg(sc->dev, sc->mii_phyaddr,
+                     MII_BMCR, BMCR_PDOWN);
+ #endif
+ 	}
+ 
+ }
diff -c -r /usr/src/sys/dev/nfe/if_nfereg.h usr/src/sys/dev/nfe/if_nfereg.h
*** /usr/src/sys/dev/nfe/if_nfereg.h	Wed Feb 10 09:26:20 2010
--- usr/src/sys/dev/nfe/if_nfereg.h	Sat Apr 10 13:26:37 2010
***************
*** 178,183 ****
--- 178,184 ----
  #define	NFE_PFF_LOOPBACK	(1 << 4)
  #define	NFE_PFF_U2M		(1 << 5)
  #define	NFE_PFF_PROMISC		(1 << 7)
+ #define NFE_PFF_ALWAYS          0x7F0000
  #define	NFE_CSUM_FEATURES	(CSUM_IP | CSUM_TCP | CSUM_UDP)
  
  /* default interrupt moderation timer of 128us */
diff -c -r /usr/src/sys/pci/if_xl.c usr/src/sys/pci/if_xl.c
*** /usr/src/sys/pci/if_xl.c	Wed Feb 10 09:26:20 2010
--- usr/src/sys/pci/if_xl.c	Sat Apr 10 13:26:37 2010
***************
*** 245,250 ****
--- 245,251 ----
  static void xl_init(void *);
  static void xl_init_locked(struct xl_softc *);
  static void xl_stop(struct xl_softc *);
+ static void xl_setwol(struct xl_softc *);
  static int xl_watchdog(struct xl_softc *);
  static int xl_shutdown(device_t);
  static int xl_suspend(device_t);
***************
*** 1181,1186 ****
--- 1182,1188 ----
  	int			media;
  	int			unit, error = 0, rid, res;
  	uint16_t		did;
+ 	uint16_t		pwrmgmtcap;
  
  	sc = device_get_softc(dev);
  	sc->xl_dev = dev;
***************
*** 1436,1441 ****
--- 1438,1452 ----
  	else
  		sc->xl_type = XL_TYPE_90X;
  
+         /* Figure out whether the chip at hand supports wake on lan. */
+         if (sc->xl_caps & XL_CAPS_PWRMGMT) {
+                 pwrmgmtcap = pci_read_config(dev, XL_PCI_PWRMGMTCAP, 2);
+                  /* Flag the card as WOL-capable if it supports
+                   * PME# assertion from D3hot power state. */
+                 if (pwrmgmtcap & XL_PME_SUPPORT_FROM_D3hot)
+                         sc->xl_flags |= XL_FLAG_SUPPORTS_WOL;
+         }
+ 
  	/* Set the TX start threshold for best performance. */
  	sc->xl_tx_thresh = XL_MIN_FRAMELEN;
  
***************
*** 1451,1456 ****
--- 1462,1471 ----
  #endif
  	}
  	ifp->if_capenable = ifp->if_capabilities;
+ 
+ 	if (sc->xl_flags & XL_FLAG_SUPPORTS_WOL)
+ 		ifp->if_capabilities |= IFCAP_WOL_MAGIC;
+ 
  #ifdef DEVICE_POLLING
  	ifp->if_capabilities |= IFCAP_POLLING;
  #endif
***************
*** 3110,3115 ****
--- 3125,3131 ----
  	int			error = 0;
  	struct mii_data		*mii = NULL;
  	u_int8_t		rxfilt;
+ 	int mask;
  
  	switch (command) {
  	case SIOCSIFFLAGS:
***************
*** 3167,3172 ****
--- 3183,3189 ----
  			    &mii->mii_media, command);
  		break;
  	case SIOCSIFCAP:
+                mask = ifr->ifr_reqcap ^ ifp->if_capenable;
  #ifdef DEVICE_POLLING
  		if (ifr->ifr_reqcap & IFCAP_POLLING &&
  		    !(ifp->if_capenable & IFCAP_POLLING)) {
***************
*** 3195,3200 ****
--- 3212,3223 ----
  			return (error);
  		}
  #endif /* DEVICE_POLLING */
+                 if ((mask & IFCAP_WOL_MAGIC) != 0 &&
+                     (ifp->if_capabilities & IFCAP_WOL_MAGIC) != 0) {
+                         ifp->if_capenable ^= IFCAP_WOL_MAGIC;
+ 			break;
+ 		}
+ 
  		XL_LOCK(sc);
  		ifp->if_capenable = ifr->ifr_reqcap;
  		if (ifp->if_capenable & IFCAP_TXCSUM)
***************
*** 3350,3355 ****
--- 3373,3379 ----
  	XL_LOCK(sc);
  	xl_reset(sc);
  	xl_stop(sc);
+ 	xl_setwol(sc);
  	XL_UNLOCK(sc);
  
  	return (0);
***************
*** 3388,3390 ****
--- 3412,3465 ----
  
  	return (0);
  }
+ 
+ /* 
+  * Enable Wake On Lan if any wake on lan options have been set.
+  */
+ static void
+ xl_setwol(struct xl_softc *sc)
+ {
+ 	u_int8_t	rxfilt;
+ 	u_int32_t	config;
+ 	struct ifnet	*ifp;
+ 
+ 	ifp = sc->xl_ifp;
+ 
+ 	XL_LOCK_ASSERT(sc);
+ 
+ 	/* If the card isn't WOL-capable, bail out. */
+ 	if (! ifp->if_capabilities & IFCAP_WOL)
+ 		return;
+ 	
+ 	/* Check whether any wake on lan events have been configured
+ 	 * by the user. */
+         if ((ifp->if_capenable & IFCAP_WOL) == 0)
+                 return;
+         
+ 	/* Disable interrupts. The data sheet says interrupts need
+ 	 * to be disabled before wake events are configured. */
+ 	CSR_WRITE_2(sc, XL_COMMAND, XL_CMD_INTR_ENB|0);
+ 
+ 	/* Configure wake on lan events. */
+ 	config = 0;
+ 	XL_SEL_WIN(7);
+ 	if (ifp->if_capenable & IFCAP_WOL_MAGIC)
+ 		config |= XL_WAKE_ON_MAGIC;
+ 	CSR_WRITE_2(sc, XL_W7_BM_WOL, config);
+ 	
+ 	/* Configure the receive filter to accept any kind of packet. */
+ 	XL_SEL_WIN(5);
+ 	rxfilt = CSR_READ_1(sc, XL_W5_RX_FILTER);
+ 	rxfilt |= XL_RXFILTER_INDIVIDUAL | XL_RXFILTER_ALLMULTI |
+ 		  XL_RXFILTER_BROADCAST | XL_RXFILTER_ALLFRAMES;
+ 	CSR_WRITE_2(sc, XL_COMMAND, XL_CMD_RX_SET_FILT | rxfilt);
+ 			
+ 	/* Make sure receiver is enabled. */
+ 	CSR_WRITE_2(sc, XL_COMMAND, XL_CMD_RX_ENABLE);
+ 
+ 	/* Make sure power management is enabled and set the card
+ 	 * into D3hot power state, so it stays active after system shutdown. */
+ 	config = pci_read_config(sc->xl_dev, XL_PCI_PWRMGMTCTRL, 2);
+ 	config |= XL_PME_EN | XL_PSTATE_D3;
+ 	pci_write_config(sc->xl_dev, XL_PCI_PWRMGMTCTRL, config | XL_PME_EN, 2);
+ }
diff -c -r /usr/src/sys/pci/if_xlreg.h usr/src/sys/pci/if_xlreg.h
*** /usr/src/sys/pci/if_xlreg.h	Wed Feb 10 09:26:20 2010
--- usr/src/sys/pci/if_xlreg.h	Sat Apr 10 13:26:37 2010
***************
*** 408,413 ****
--- 408,414 ----
  #define XL_W7_BM_LEN		0x06
  #define XL_W7_BM_STATUS		0x0B
  #define XL_W7_BM_TIMEr		0x0A
+ #define XL_W7_BM_WOL            0x0C
  
  /*
   * bus master control registers
***************
*** 577,582 ****
--- 578,584 ----
  #define XL_FLAG_NO_XCVR_PWR		0x0080
  #define XL_FLAG_USE_MMIO		0x0100
  #define	XL_FLAG_NO_MMIO			0x0200
+ #define	XL_FLAG_SUPPORTS_WOL		0x0400
  
  #define XL_NO_XCVR_PWR_MAGICBITS	0x0900
  
***************
*** 742,744 ****
--- 744,755 ----
  #ifndef IFM_10_FL
  #define IFM_10_FL	13		/* 10baseFL - Fiber */
  #endif
+ 
+ /* Bits in the XL_PCI_PWRMGMTCAP register */
+ #define XL_PME_SUPPORT_FROM_D0          0x0800
+ #define XL_PME_SUPPORT_FROM_D1          0x1000
+ #define XL_PME_SUPPORT_FROM_D2          0x2000
+ #define XL_PME_SUPPORT_FROM_D3hot       0x4000
+ #define XL_PME_SUPPORT_FROM_D3cold      0x8000
+ 
+ #define XL_WAKE_ON_MAGIC        0x0002
