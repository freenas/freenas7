--- ./configure.in.orig	2008-12-19 13:57:33.000000000 +0000
+++ ./configure.in	2009-01-06 17:10:53.000000000 +0000
@@ -184,16 +184,6 @@
        fi
 fi
 
-AC_ARG_ENABLE(dmalloc, [AS_HELP_STRING([--enable-dmalloc], [Enable heap debugging [default=no]])])
-
-if test "x$enable_dmalloc" = xyes
-then
-	AC_DEFINE(ENABLE_DMALLOC, 1, [Define to turn on dmalloc debugging])
-	AC_DEFINE(DMALLOC_FUNC_CHECK, 1,
-                  [Define to check invariants around some common functions])
-	LIBS="$LIBS -ldmalloc"	
-fi
-
 #################################################
 # check for a shared memory profiling support
 AC_MSG_CHECKING(whether to use profiling)
@@ -888,6 +878,21 @@
 	[#include <signal.h>])
 fi
 
+AC_CACHE_CHECK([for struct sigevent type],samba_cv_struct_sigevent, [
+    AC_TRY_COMPILE([
+#include <sys/types.h>
+#if STDC_HEADERS
+#include <stdlib.h>
+#include <stddef.h>
+#endif
+#include <signal.h>],[struct sigevent s;],
+	samba_cv_struct_sigevent=yes,samba_cv_struct_sigevent=no)])
+if test x"$samba_cv_struct_sigevent" = x"yes"; then
+   AC_DEFINE(HAVE_STRUCT_SIGEVENT,1,[Whether we have the struct sigevent])
+   AC_CHECK_MEMBERS([struct sigevent.sigev_value.sival_ptr,struct sigevent.sigev_value.sigval_ptr], , ,
+	[#include <signal.h>])
+fi
+
 AC_CACHE_CHECK([for struct timespec type],samba_cv_struct_timespec, [
     AC_TRY_COMPILE([
 #include <sys/types.h>
@@ -1858,9 +1863,6 @@
 AC_MSG_CHECKING([PICFLAG])
 AC_MSG_RESULT([$PICFLAG])
 
-AC_MSG_CHECKING([NSSSONAMEVERSIONSUFFIX])
-AC_MSG_RESULT([$NSSSONAMEVERSIONSUFFIX])
-
 AC_CACHE_CHECK([whether building shared libraries actually works],
                [ac_cv_shlib_works],[
    # try building a trivial shared library
@@ -2299,31 +2301,15 @@
 
     #  This is here to handle -withval stuff for --with-libiconv
     #  Perhaps we should always add a -L
+    LDFLAGS="$save_LDFLAGS -L$i/lib"
     CPPFLAGS="$save_CPPFLAGS -I$i/include"
-
-    # Check lib and lib32 library variants to cater for IRIX ABI-specific
-    # installation paths. This gets a little tricky since we might have iconv
-    # in both libiconv and in libc. In this case the jm_ICONV test will always
-    # succeed when the header is found. To counter this, make sure the
-    # library directory is there and check the ABI directory first (which
-    # should be harmless on other systems.
-    # For IA64 HPUX systems, the libs are located in lib/hpux32 instead of lib.
-    for l in "lib32" "lib" "lib/hpux32"; do
-        if test -d "$i/$l" ; then
-                LDFLAGS="$save_LDFLAGS -L$i/$l"
-		LIBS=
-		export LDFLAGS LIBS CPPFLAGS
-		# Try to find iconv(3)
-                jm_ICONV($i/$l)
-                if test x"$ICONV_FOUND" = "xyes" ; then
-		    libext="$l"
-		    break
-		fi
-        fi
-    done
+    LIBS=
+    export LDFLAGS LIBS CPPFLAGS
+    # Try to find iconv(3)
+    jm_ICONV($i/lib)
 
     if test x"$ICONV_FOUND" = "xyes" ; then
-	iconv_current_LDFLAGS="-L$i/$libext"
+	iconv_current_LDFLAGS="-L$i/lib"
 	iconv_current_CPPFLAGS="-I$i/include"
 
         if test x"$jm_cv_lib_iconv" != x; then
@@ -2332,7 +2318,6 @@
 	    # We found iconv in libc.
 	    iconv_current_LIBS=""
         fi
-
     fi
 
     if test x"$ICONV_FOUND" = "xyes" ; then
@@ -4030,10 +4015,10 @@
 
   ################################################################
   # first test for Active Directory support being enabled
-  #if test x"$with_ads_support" = x"no"; then
-  #		AC_MSG_ERROR(Active Directory support is required to enable DNS Update support)
-  #		with_dnsupdate_support=no
-  #fi	  	
+  if test x"$with_ads_support" = x"no"; then
+  		AC_MSG_ERROR(Active Directory support is required to enable DNS Update support)
+  		with_dnsupdate_support=no
+  fi	  	
   ##################################################################
   # then test for uuid.h (necessary to generate unique DNS keynames
   # (uuid.h is required for this test)
@@ -5673,6 +5658,7 @@
 		NSSSONAMEVERSIONSUFFIX=".1"
 		WINBIND_NSS_EXTRA_OBJS="nsswitch/winbind_nss_freebsd.o \
 		    nsswitch/winbind_nss_linux.o"
+		WINBIND_WINS_NSS_EXTRA_OBJS="nsswitch/wins_freebsd.o"
 		WINBIND_NSS="nsswitch/nss_winbind.$SHLIBEXT"
 		WINBIND_WINS_NSS="nsswitch/nss_wins.$SHLIBEXT"
 		;;
@@ -5751,23 +5737,15 @@
 fi
 
 # Display test results
-
 if test x"$HAVE_WINBIND" = x"no"; then
 	WINBIND_NSS=""
 	WINBIND_WINS_NSS=""
 fi
 
-if test x"$enable_developer" = x"yes" -a x"$LINK_LIBWBCLIENT" = x"STATIC" ; then
-	BUILD_LIBWBCLIENT_SHARED=no
-else
-	BUILD_LIBWBCLIENT_SHARED=yes
-fi
-
 LIBWBCLIENT_SHARED_TARGET=bin/libwbclient.$SHLIBEXT
 LIBWBCLIENT_STATIC_TARGET=bin/libwbclient.a
 LIBWBCLIENT_SOVER=0
 if test $BLDSHARED = true -a x"$HAVE_WINBIND" = x"yes" -a x"$BUILD_LIBWBCLIENT_SHARED" = x"yes"; then
-	NSS_MODULES="${WINBIND_NSS} ${WINBIND_WINS_NSS}"
 	## Only worry about libwbclient if we have shared library support
 	## and winbindd
         LIBWBCLIENT_SHARED=$LIBWBCLIENT_SHARED_TARGET
@@ -5785,26 +5763,34 @@
 
 	EXTRA_BIN_PROGS="$EXTRA_BIN_PROGS bin/wbinfo\$(EXEEXT)"
 	EXTRA_SBIN_PROGS="$EXTRA_SBIN_PROGS bin/winbindd\$(EXEEXT)"
-        if test $BLDSHARED = true -a x"$create_pam_modules" = x"yes"; then
+        if test $BLDSHARED = true; then
+	    NSS_MODULES="${WINBIND_NSS} ${WINBIND_WINS_NSS}"
+	    if test x"$create_pam_modules" = x"yes"; then
 		PAM_MODULES="$PAM_MODULES pam_winbind"
 		INSTALL_PAM_MODULES="installpammodules"
 		UNINSTALL_PAM_MODULES="uninstallpammodules"
+	    fi
 	fi
 else
         AC_MSG_RESULT(no$winbind_no_reason)
 fi
 
-AC_CHECK_LIB(pthread, pthread_mutex_lock, [WINBIND_NSS_PTHREAD="-lpthread"
+AC_MSG_CHECKING([NSSSONAMEVERSIONSUFFIX])
+AC_MSG_RESULT([$NSSSONAMEVERSIONSUFFIX])
+
+AC_CHECK_LIB(pthread, pthread_mutex_lock, [WINBIND_NSS_PTHREAD="-pthread"
 			AC_DEFINE(HAVE_PTHREAD, 1, [whether pthread exists])])
 
 AC_SUBST(WINBIND_NSS_PTHREAD)
 AC_SUBST(WINBIND_NSS)
-AC_SUBST(WINBIND_WINS_NSS)
 AC_SUBST(WINBIND_NSS_LDSHFLAGS)
 AC_SUBST(WINBIND_NSS_EXTRA_OBJS)
 AC_SUBST(WINBIND_NSS_EXTRA_LIBS)
-AC_SUBST(NSSSONAMEVERSIONSUFFIX)
 AC_SUBST(PAM_WINBIND_EXTRA_LIBS)
+AC_SUBST(WINBIND_WINS_NSS)
+AC_SUBST(WINBIND_WINS_NSS_EXTRA_OBJS)
+AC_SUBST(WINBIND_WINS_NSS_EXTRA_LIBS)
+AC_SUBST(NSSSONAMEVERSIONSUFFIX)
 
 AC_SUBST(WINBIND_KRB5_LOCATOR)
 
@@ -5899,7 +5885,7 @@
     AC_CHECK_FUNCS(DNSServiceRegister)
     AC_CHECK_LIB_EXT(dns_sd, DNSSD_LIBS, DNSServiceRegister)
     if test x"$ac_cv_func_DNSServiceRegister" != x"yes" -a \
-            x"$ac_cv_lib_ext_DNSServiceRegister" != x"yes"; then
+	    x"$ac_cv_lib_ext_dns_sd_DNSServiceRegister" != x"yes"; then
 	have_dnssd_support=no
     fi
 
@@ -5955,13 +5941,21 @@
 # Start
 AC_CHECK_FUNC(getmntent)
 
-AC_CHECK_HEADERS(sys/statfs.h)
+AC_CHECK_HEADERS(sys/statfs.h sys/mount.h)
 
 AC_MSG_CHECKING([vfs_fileid: checking for statfs() and struct statfs.f_fsid)])
 AC_CACHE_VAL(vfsfileid_cv_statfs,[
 	     AC_TRY_RUN([
 		#include <sys/types.h>
+		#ifdef HAVE_SYS_PARAM_H
+		#include <sys/param.h>
+		#endif
+		#ifdef HAVE_SYS_MOUNT_H
+		#include <sys/mount.h>
+		#endif
+		#ifdef HAVE_SYS_STATFS_H
 		#include <sys/statfs.h>
+		#endif
 		int main(void)
 		{
 			struct statfs fsd;
@@ -6207,6 +6201,16 @@
 
 fi
 
+AC_ARG_ENABLE(dmalloc, [AS_HELP_STRING([--enable-dmalloc], [Enable heap debugging [default=no]])])
+
+if test "x$enable_dmalloc" = xyes
+then
+	AC_DEFINE(ENABLE_DMALLOC, 1, [Define to turn on dmalloc debugging])
+	AC_DEFINE(DMALLOC_FUNC_CHECK, 1,
+                  [Define to check invariants around some common functions])
+	LIBS="$LIBS -ldmalloc"	
+fi
+
 dnl Remove -L/usr/lib/? from LDFLAGS and LIBS
 LIB_REMOVE_USR_LIB(LDFLAGS)
 LIB_REMOVE_USR_LIB(LIBS)
