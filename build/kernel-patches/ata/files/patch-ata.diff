diff -ruN ata/ata-all.c ata/ata-all.c
--- ata/ata-all.c	2008-04-26 19:33:14.000000000 +0000
+++ ata/ata-all.c	2008-04-26 22:17:57.000000000 +0000
@@ -75,6 +75,7 @@
 uma_zone_t ata_request_zone;
 uma_zone_t ata_composite_zone;
 int ata_wc = 1;
+int ata_to = 5;
 
 /* local vars */
 static int ata_dma = 1;
@@ -91,6 +92,9 @@
 TUNABLE_INT("hw.ata.wc", &ata_wc);
 SYSCTL_INT(_hw_ata, OID_AUTO, wc, CTLFLAG_RDTUN, &ata_wc, 0,
 	   "ATA disk write caching");
+TUNABLE_INT("hw.ata.to", &ata_to);
+SYSCTL_INT(_hw_ata, OID_AUTO, to, CTLFLAG_RW, &ata_to, 0,
+	   "ATA disk timeout vis-a-vis power-saving");
 
 /*
  * newbus device interface related functions
diff -ruN ata/ata-all.h ata/ata-all.h
--- ata/ata-all.h	2008-04-26 19:33:14.000000000 +0000
+++ ata/ata-all.h	2008-04-26 22:14:42.000000000 +0000
@@ -524,6 +524,7 @@
 extern struct intr_config_hook *ata_delayed_attach;
 extern devclass_t ata_devclass;
 extern int ata_wc;
+extern int ata_to;
  
 /* public prototypes */
 /* ata-all.c: */
diff -ruN ata/ata-disk.c ata/ata-disk.c
--- ata/ata-disk.c	2008-04-26 19:33:14.000000000 +0000
+++ ata/ata-disk.c	2008-04-26 21:43:12.000000000 +0000
@@ -259,7 +259,7 @@
     }
     request->flags = ATA_R_CONTROL;
     request->dev = dev;
-    request->timeout = 5;
+    request->timeout = ata_to;
     request->retries = 1;
     request->callback = ad_power_callback;
     request->u.ata.command = ATA_STANDBY_IMMEDIATE;
@@ -291,9 +291,9 @@
     if (atadev->spindown_state) {
 	device_printf(dev, "request while spun down, starting.\n");
 	atadev->spindown_state = 0;
-	request->timeout = 31;
+	request->timeout = ata_to;
     } else {
-	request->timeout = 5;
+	request->timeout = ata_to;
     }
     request->retries = 2;
     request->data = bp->bio_data;
