#!/bin/sh
# Copyright (c) 2008-2009 Volker Theile (votdev@gmx.de)
# All rights reserved.

# PROVIDE: nut_upsmon
# REQUIRE: NETWORKING nut
# BEFORE: LOGIN
# KEYWORD: shutdown
# XQUERY: -i "count(//ups/enable) > 0" -o "0" -b
# RCVAR: nut_upsmon

. /etc/rc.subr
. /etc/configxml.subr

name="nut_upsmon"
rcvar=`set_rcvar`

load_rc_config "${name}"

# Custom commands
extra_commands="mkconf"
mkconf_cmd="mkconf_cmd"

# Defaults
nut_upsmon_enable=${nut_upsmon_enable:-"NO"}
nut_upsmon_prefix=${nut_upsmon_prefix:-"/usr/local"}
nut_upsmon_conf=${nut_upsmon_conf:-"/var/etc/upsmon.conf"}
nut_upsmon_powerdownflag=${nut_upsmon_powerdownflag:-"/var/etc/killpower"}
nut_upsmon_sched_conf=${nut_upsmon_sched_conf:-"/var/etc/upssched.conf"}
nut_upsmon_runas=${nut_upsmon_runas:-"root"}
nut_upsmon_user=${nut_upsmon_user:-"root"}
nut_upsmon_password=${nut_upsmon_password:-"freenas"}
nut_upsmon_flags=${nut_upsmon_flags:-"-u ${nut_upsmon_runas} localhost"}
nut_upsmon_notifycmd=${nut_upsmon_notifycmd:-"/usr/local/sbin/upssched"}
nut_upsmon_shutdowncmd=${nut_upsmon_shutdowncmd:-"/sbin/shutdown -p now"}
nut_upsmon_minsupplies=${nut_upsmon_minsupplies:-"1"}
nut_upsmon_pollfreq=${nut_upsmon_pollfreq:-"5"}
nut_upsmon_pollfreqalert=${nut_upsmon_pollfreqalert:-"5"}
nut_upsmon_hostsync=${nut_upsmon_hostsync:-"15"}
nut_upsmon_deadtime=${nut_upsmon_deadtime:-"15"}
nut_upsmon_rbwarntime=${nut_upsmon_rbwarntime:-"43200"}
nut_upsmon_nocommwarntime=${nut_upsmon_nocommwarntime:-"300"}
nut_upsmon_finaldelay=${nut_upsmon_finaldelay:-"5"}

required_dirs="/var/run"
required_files="${nut_upsmon_conf}"
command="${nut_upsmon_prefix}/sbin/upsmon"
pidfile="/var/run/upsmon.pid"

mkconf_cmd()
{
	local _upsname _shutdownmode _shutdowntimer

	_upsname=`configxml_get "//ups/upsname"`
	_shutdownmode=`configxml_get "//ups/shutdownmode"`

	# Create upsmon.conf
	cat <<EOF > ${nut_upsmon_conf}
MONITOR ${_upsname}@localhost 1 ${nut_upsmon_user} ${nut_upsmon_password} master
MINSUPPLIES ${nut_upsmon_minsupplies}
SHUTDOWNCMD "${nut_upsmon_shutdowncmd}"
NOTIFYCMD ${nut_upsmon_notifycmd}
POLLFREQ ${nut_upsmon_pollfreq}
POLLFREQALERT ${nut_upsmon_pollfreqalert}
HOSTSYNC ${nut_upsmon_hostsync}
DEADTIME ${nut_upsmon_deadtime}
POWERDOWNFLAG ${nut_upsmon_powerdownflag}
NOTIFYFLAG ONLINE SYSLOG+WALL+EXEC
NOTIFYFLAG ONBATT SYSLOG+WALL+EXEC
NOTIFYFLAG LOWBATT SYSLOG+WALL+EXEC
NOTIFYFLAG COMMOK SYSLOG+WALL+EXEC
NOTIFYFLAG COMMBAD SYSLOG+WALL+EXEC
NOTIFYFLAG SHUTDOWN SYSLOG+WALL+EXEC
NOTIFYFLAG REPLBATT SYSLOG+WALL+EXEC
NOTIFYFLAG NOCOMM SYSLOG+WALL+EXEC
NOTIFYFLAG FSD SYSLOG+WALL+EXEC
RBWARNTIME ${nut_upsmon_rbwarntime}
NOCOMMWARNTIME ${nut_upsmon_nocommwarntime}
FINALDELAY ${nut_upsmon_finaldelay}
EOF

	# Create upssched.conf
	cat <<EOF > ${nut_upsmon_sched_conf}
CMDSCRIPT /usr/local/bin/upssched-cmd
PIPEFN /var/run/upssched.pipe
LOCKFN /var/run/upssched.lock

AT COMMOK * EXECUTE notify
AT COMMBAD * EXECUTE notify
AT REPLBATT * EXECUTE notify
AT NOCOMM * EXECUTE notify
AT FSD * EXECUTE forced-shutdown
AT NOPARENT * EXECUTE notify
EOF

	if [ "onbatt" = ${_shutdownmode} ]; then
		_shutdowntimer=`configxml_get "//ups/shutdowntimer"`

		cat <<EOF >> ${nut_upsmon_sched_conf}
AT ONLINE * CANCEL-TIMER shutdown
AT ONLINE * EXECUTE resume
AT ONBATT * START-TIMER shutdown ${_shutdowntimer}
AT ONBATT * EXECUTE shutdown-warning
AT LOWBATT * START-TIMER shutdown
AT LOWBATT * EXECUTE shutdown-warning
EOF
	else
		cat <<EOF >> ${nut_upsmon_sched_conf}
AT ONLINE * EXECUTE notify
AT ONBATT * EXECUTE notify
AT LOWBATT * EXECUTE shutdown
EOF
	fi

	chmod 0600 ${nut_upsmon_conf}
	chmod 0600 ${nut_upsmon_sched_conf}
}

# Create required config file
mkconf_cmd

run_rc_command "$1"
