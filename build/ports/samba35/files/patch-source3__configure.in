--- ./source3/configure.in.orig	2011-08-04 03:24:05.000000000 +0900
+++ ./source3/configure.in	2011-10-29 01:02:30.000000000 +0900
@@ -756,8 +756,8 @@
 
         if test "x$CUPS_CONFIG" != x; then
 
-		ac_save_LDFLAGS=$LDFLAGS
-		ac_save_PRINT_LIBS=$PRINT_LIBS
+		ac_save_PRINT_CPPFLAGS=$CPPFLAGS
+		ac_save_PRINT_LDFLAGS=$LDFLAGS
 		AC_CHECK_HEADERS(cups/cups.h cups/language.h)
 
 		if test x"$ac_cv_header_cups_cups_h" = xyes -a \
@@ -776,8 +776,8 @@
 			AC_CHECK_LIB_EXT(cups, PRINT_LIBS, httpConnectEncrypt)
 		else
 			AC_MSG_WARN([cups-config around but cups-devel not installed])
-			CFLAGS=$ac_save_CFLAGS
-			LDFLAGS=$ac_save_LDFLAGS
+			CPPFLAGS=$ac_save_PRINT_CPPFLAGS
+			LDFLAGS=$ac_save_PRINT_LDFLAGS
 			PRINT_LIBS=$ac_save_PRINT_LIBS
 		fi
 
@@ -1731,18 +1731,18 @@
 AC_MSG_RESULT($BLDSHARED)
 
 saved_before_as_needed_ldflags="$LDFLAGS"
-for flags in "-Wl,--as-needed" "-Wl,-z,ignore" "-z ignore" ; do
-	saved_ldflags="$LDFLAGS"
-	AC_MSG_CHECKING([if $flags works])
-	LDFLAGS="$flags $saved_ldflags"
-	AC_TRY_LINK([],[],
-		[AC_MSG_RESULT([yes])
-		LD_AS_NEEDED_FLAG=$flags
-		ld_as_needed_flag_found=yes],
-		AC_MSG_RESULT([no]))
-	LDFLAGS="$LD_AS_NEEDED_FLAG $saved_ldflags"
-	test x"$ld_as_needed_flag_found" = xyes && break
-done
+#for flags in "-Wl,--as-needed" "-Wl,-z,ignore" "-z ignore" ; do
+#	saved_ldflags="$LDFLAGS"
+#	AC_MSG_CHECKING([if $flags works])
+#	LDFLAGS="$flags $saved_ldflags"
+#	AC_TRY_LINK([],[],
+#		[AC_MSG_RESULT([yes])
+#		LD_AS_NEEDED_FLAG=$flags
+#		ld_as_needed_flag_found=yes],
+#		AC_MSG_RESULT([no]))
+#	LDFLAGS="$LD_AS_NEEDED_FLAG $saved_ldflags"
+#	test x"$ld_as_needed_flag_found" = xyes && break
+#done
 
 # check if we have to disable LD_AS_NEEDED_FLAG:
 # On some systems for a veriety of reasons linking with
@@ -4287,10 +4287,10 @@
 
   ################################################################
   # first test for Active Directory support being enabled
-  #if test x"$with_ads_support" = x"no"; then
-  #		AC_MSG_ERROR(Active Directory support is required to enable DNS Update support)
-  #		with_dnsupdate_support=no
-  #fi	  	
+  if test x"$with_ads_support" = x"no"; then
+  		AC_MSG_ERROR(Active Directory support is required to enable DNS Update support)
+  		with_dnsupdate_support=no
+  fi	
   ##################################################################
   # then test for uuid.h (necessary to generate unique DNS keynames
   # (uuid.h is required for this test)
@@ -4540,10 +4540,46 @@
     fi
 
 	if test x"$use_pam" = x"yes"; then
-    AC_DEFINE(WITH_PAM,1,[Whether to include PAM support])
+		AC_DEFINE(WITH_PAM,1,[Whether to include PAM support])
 		AC_DEFINE(HAVE_LIBPAM,1,[Whether libpam is available])
 		AUTH_LIBS="$AUTH_LIBS $PAM_LIBS"
-    with_pam_for_crypt=yes
+		with_pam_for_crypt=yes
+
+		AC_VERIFY_C_PROTOTYPE(
+			[int pam_get_data(const pam_handle_t *pamh, const char *module_data_name, const void **data)],
+			[return 0;],
+			[AC_DEFINE(PAM_GET_DATA_ARG3_CONST_VOID_PP, 1, [Whether pam_get_data 3 argument is a const pointer to pointer])],
+			[
+			dnl Old OpenPAM declaration
+			AC_VERIFY_C_PROTOTYPE(
+				[int pam_get_data(pam_handle_t *pamh, const char *module_data_name, void **data)],
+				[return 0;],
+				[AC_DEFINE(PAM_GET_DATA_ARG3_VOID_PP, 1, [Whether pam_get_data 3 argument is a void pointer to pointer])],
+				[], [
+					#include <sys/types.h>
+					#if HAVE_SECURITY_PAM_APPL_H
+					#include <security/pam_appl.h>
+					#endif
+					#if HAVE_PAM_PAM_APPL_H
+					#include <pam/pam_appl.h>
+					#endif
+					#if HAVE_SECURITY_PAM_MODULES_H
+					#include <security/pam_modules.h>
+					#endif
+				]
+			)],[
+				#include <sys/types.h>
+				#if HAVE_SECURITY_PAM_APPL_H
+				#include <security/pam_appl.h>
+				#endif
+				#if HAVE_PAM_PAM_APPL_H
+				#include <pam/pam_appl.h>
+				#endif
+				#if HAVE_SECURITY_PAM_MODULES_H
+				#include <security/pam_modules.h>
+				#endif
+			]
+		)
 
 		if test x"$create_pam_modules" = x"yes"; then
 			AC_DEFINE(WITH_PAM_MODULES,1,[Whether to include PAM MODULES support])
@@ -5545,7 +5581,8 @@
         esac
 fi # with_acl_support
 
-
+# check for NFSv4 acl
+AC_CHECK_LIB(sunacl, acl, [ACL_LIBS="$ACL_LIBS -lsunacl"])
 
 #################################################
 # check for AIO support
@@ -6486,13 +6523,21 @@
 # Start
 AC_CHECK_FUNC(getmntent)
 
-AC_CHECK_HEADERS(sys/statfs.h)
+AC_CHECK_HEADERS(sys/statfs.h sys/mount.h)
 
 AC_MSG_CHECKING([vfs_fileid: checking for statfs() and struct statfs.f_fsid)])
 AC_CACHE_VAL(vfsfileid_cv_statfs,[
 	     AC_TRY_RUN([
 		#include <sys/types.h>
+		#ifdef HAVE_SYS_PARAM_H
+		#include <sys/param.h>
+		#endif
+		#ifdef HAVE_SYS_MOUNT_H
+		#include <sys/mount.h>
+		#endif
+		#ifdef HAVE_SYS_STATFS_H
 		#include <sys/statfs.h>
+		#endif
 		int main(void)
 		{
 			struct statfs fsd;
@@ -6822,6 +6867,16 @@
 	LIBS="$LIBS -ldmalloc"
 fi
 
+AC_ARG_ENABLE(dmalloc, [AS_HELP_STRING([--enable-dmalloc], [Enable heap debugging [default=no]])])
+
+if test "x$enable_dmalloc" = xyes
+then
+	AC_DEFINE(ENABLE_DMALLOC, 1, [Define to turn on dmalloc debugging])
+	AC_DEFINE(DMALLOC_FUNC_CHECK, 1,
+                  [Define to check invariants around some common functions])
+	LIBS="$LIBS -ldmalloc"	
+fi
+
 dnl Remove -L/usr/lib/? from LDFLAGS and LIBS
 LIB_REMOVE_USR_LIB(LDFLAGS)
 LIB_REMOVE_USR_LIB(LIBS)
