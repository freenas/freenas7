#!/bin/sh
# Copyright (c) 2008-2009 Volker Theile (votdev@gmx.de)
# All rights reserved.

# PROVIDE: nut
# REQUIRE: NETWORKING
# BEFORE: LOGIN
# KEYWORD: shutdown
# XQUERY: -i "count(//ups/enable) > 0" -o "0" -b
# RCVAR: nut

. /etc/rc.subr
. /etc/configxml.subr

name="nut"
rcvar=`set_rcvar`

load_rc_config "${name}"

# Custom commands
extra_commands="mkconf"
start_precmd="nut_prestart"
stop_postcmd="nut_poststop"
mkconf_cmd="mkconf_cmd"

# Defaults
nut_enable=${nut_enable:-"NO"}
nut_prefix=${nut_prefix:-"/usr/local"}
nut_ups_conf=${nut_ups_conf:-"/var/etc/ups.conf"}
nut_upsd_conf=${nut_upsd_conf:-"/var/etc/upsd.conf"}
nut_upsd_users=${nut_upsd_users:-"/var/etc/upsd.users"}
nut_statedir=${nut_statedir:-"/var/db/${name}"}
nut_runas=${nut_runas:-"root"}
nut_flags=${nut_flags:-"-u ${nut_runas}"}
nut_upsmon_user=${nut_upsmon_user:-"root"}
nut_upsmon_password=${nut_upsmon_password:-"freenas"}
required_dirs="/var/run ${nut_statedir}"
required_files="${nut_ups_conf} ${nut_upsd_conf} ${nut_upsd_users}"
command="${nut_prefix}/sbin/upsd"
pidfile="/var/run/upsd.pid"

mkconf_cmd()
{
	local _remotemonitor _network _id _aclname _aclnames

	# Get configuration
	_remotemonitor=`configxml_get "//ups/remotemonitor"`

	# Create ups.conf
	/usr/local/bin/xml sel -t -m "//ups" \
		-v "concat('[',upsname,']')" -n \
		-v "concat('&#009;driver = ',driver)" -n \
		-v "concat('&#009;port = ',port)" -n \
		-m "auxparam" \
			-v "concat('&#009;',.)" -n \
		-b \
		${configxml_file} | /usr/local/bin/xml unesc > ${nut_ups_conf}

	# Create upsd.conf
	cat <<EOF > ${nut_upsd_conf}
ACL all 0.0.0.0/0
ACL localhost 127.0.0.1/32
EOF

	for _network in ${_remotemonitor}; do
		_id=$(( ${_id} + 1 ))
		_aclname="remotemonitor${_id}"
		_aclnames="${_aclnames} ${_aclname}"
		echo "ACL ${_aclname} ${_network}" >> ${nut_upsd_conf}
	done

	cat <<EOF >> ${nut_upsd_conf}
ACCEPT localhost ${_aclnames}
REJECT all
EOF

	# Create upsd.users
	cat <<EOF > ${nut_upsd_users}
[${nut_upsmon_user}]
        password = ${nut_upsmon_password}
        allowfrom = localhost ${_aclnames}
        actions = set
        upsmon master
EOF

	chmod 0600 ${nut_ups_conf}
	chmod 0600 ${nut_upsd_conf}
	chmod 0600 ${nut_upsd_users}
}

nut_prestart() {
	${nut_prefix}/libexec/nut/upsdrvctl -u ${nut_runas} start
}

nut_poststop() {
	${nut_prefix}/libexec/nut/upsdrvctl -u ${nut_runas} stop
}

# Prepare state dir
mkdir -m 0600 -p ${nut_statedir}

# Create required config file
mkconf_cmd

run_rc_command "$1"
